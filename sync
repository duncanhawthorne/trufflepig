#!/usr/bin/env python
from __future__ import division #to give true division
import os, sys

sys.exit()

'''
Mercurial sync script
'''

def bash(command):		
	return os.popen(command).read().split("\n")[:-1]
	
try:	
	ChangeLog = file("ChangeLog", "r").read().splitlines()
except:
	ChangeLog = [""]#just so it matches an empty file if the ChangeLog file doesnt exist
	
if ChangeLog == [""]:
	message = "automatic repository sync"
else:
	message = ChangeLog[-1]#takes the last line from the changelog as the commit message
	
directory = "."

hg_stat_output = bash("hg status "+directory)
print(hg_stat_output)

if len(sys.argv) == 1:
	bash('hg pull')#will cause error if we pull from nothing
	bash('hg merge')
	bash('hg commit -m "'+message+'"')
	os.system('hg update')
else:
	None #probably doesnt make sense for hg
#	if sys.argv[1] == "--upload":
#		print("just doing upload")

print(bash('hg add'))
for line in hg_stat_output:
	status, filename = line.split(" ")
	print(status, filename)	
	#bob fred
	if status == "!" or status == "D":
		print("deleting "+filename)
		print(bash('rm "'+filename+'"'))
	#	if "is already under version control" in output[0]:
	#		print("you moved a folder "+filename)
	#		list_of_hg_dirs = []
	#		for root, folder, files  in os.walk(filename):
	#			if root[-4:] == ".hg":
	#				list_of_hg_dirs.append(root)
	#		for folder in list_of_hg_dirs:
	#			bash("rm -r -f \""+folder+"\"")
	#		print(bash('hg add'))
	elif status == "M":
		print(filename+" has modifications")
print("commiting, this may take a while")
os.system("hg commit -m '"+message+"' "+directory)#not bash(), as need to see feedback
